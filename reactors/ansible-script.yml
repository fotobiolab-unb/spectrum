---
- name: Setup Arduino Environment
  hosts: reactors
  become: yes
  gather_facts: yes
  vars_prompt:
    - name: "GH_TOKEN"
      prompt: "GitHub Token"
      private: true
  vars:
    library_version: 0.4
    spectrum_version: 0.1

  tasks:
    - name: Ensure required packages are installed
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - unzip
      when: ansible_os_family == 'Debian'

    - name: Arduino CLI Ops
      block:

      - name: Install Arduino CLI
        shell: >
          BINDIR=/usr/local/bin sh -c "curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh"
        environment:
          DEBIAN_FRONTEND: noninteractive
        when: ansible_os_family == 'Debian'

      - name: Update Arduino library index
        command: arduino-cli lib update-index -v
        when: ansible_os_family == 'Debian'

      - name: Generate default config
        command: arduino-cli config init --overwrite

      - name: Get library location
        command: arduino-cli config dump --format json
        register: arduino_cli_config

      - name: Parse library location
        set_fact:
          arduino_lib_path: "{{ arduino_cli_config.stdout | from_json }}"
        when: arduino_cli_config is mapping

      - name: Install arduino:avr board
        command: arduino-cli core install arduino:avr

      - name: Allow unsafe installs
        command: arduino-cli config set library.enable_unsafe_install true

    - name: Download and install libraries
      get_url:
        url: "https://github.com/fotobiolab-unb/arduino-libraries/archive/v{{ library_version }}.zip"
        dest: "/home/pi/libraries.zip"
        headers:
          Authorization: "token {{ GH_TOKEN }}"
      when: ansible_os_family == 'Debian'

    - name: Prepare library folder
      block:

      - name: Delete library folder if exists
        file:
          state: absent
          path: /home/pi/arduino-libraries

      - name: Extract and move libraries
        unarchive:
          remote_src: yes
          src: "/home/pi/libraries.zip"
          dest: "/home/pi"
        when: ansible_os_family == 'Debian'

      - name: Renaming Library folder
        command: mv -f /home/pi/arduino-libraries-{{ library_version }} /home/pi/arduino-libraries

      - name: Installing Zips
        shell: >
          arduino-cli lib install OneWire;
          for zip_file in /home/pi/arduino-libraries/zips/*.zip; do
            arduino-cli lib install --zip-path "$zip_file"
          done

    - name: Download source code
      get_url:
        url: "https://github.com/fotobiolab-unb/spectrum/archive/v{{ spectrum_version }}.zip"
        dest: "/home/pi/spectrum.zip"
        headers:
          Authorization: "token {{ GH_TOKEN }}"

    - name: Prepare Spectrum folder
      block:

      - name: Remove Spectrum folder if exists
        file:
          state: absent
          path: /home/pi/spectrum

      - name: Extract and move source code
        unarchive:
          remote_src: yes
          src: "/home/pi/spectrum.zip"
          dest: "/home/pi"

      - name: Renaming Source folder
        command: mv -f /home/pi/spectrum-{{ spectrum_version }} /home/pi/spectrum

      - name: Build image
        shell: >
          arduino-cli compile -b arduino:avr:mega /home/pi/spectrum/Spectrum;
          arduino-cli upload -t -b arduino:avr:mega -p "$(arduino-cli board list | grep 'USB' | awk '{print $1}')" /home/pi/spectrum/Spectrum
